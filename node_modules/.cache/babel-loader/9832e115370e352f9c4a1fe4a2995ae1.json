{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\week7\\\\qualified\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\TimerSection.jsx\";\nimport React, { useState } from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\nexport default function TimerSection({\n  timerObject,\n  setTimerObject,\n  isTimerRunning\n}) {\n  if (isTimerRunning) {\n    let width = 1 - timerObject.focusSeconds / (timerObject.focusDuration * 60);\n    width = width * 100;\n    console.log(width);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }, \"Focusing for \", minutesToDuration(timerObject.focusDuration), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, secondsToDuration(timerObject.focusSeconds), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: \"0%\"\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 23\n      }\n    })))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["D:/Thinkful/week7/qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/TimerSection.jsx"],"names":["React","useState","minutesToDuration","secondsToDuration","TimerSection","timerObject","setTimerObject","isTimerRunning","width","focusSeconds","focusDuration","console","log","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,eAAe,SAASC,YAAT,CAAuB;AAACC,EAAAA,WAAD;AAAcC,EAAAA,cAAd;AAA6BC,EAAAA;AAA7B,CAAvB,EACf;AACI,MAAGA,cAAH,EACA;AACI,QAAIC,KAAK,GAAG,IAAIH,WAAW,CAACI,YAAb,IAA4BJ,WAAW,CAACK,aAAZ,GAA0B,EAAtD,CAAf;AACAF,IAAAA,KAAK,GAAGA,KAAK,GAAC,GAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACgBN,iBAAiB,CAACG,WAAW,CAACK,aAAb,CADjC,aAFF,eAME;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,iBAAiB,CAACE,WAAW,CAACI,YAAb,CADpB,eANF,CADF,CAFJ,eAcI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEI,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBAAc,GALhB,CAKoB;AALpB;AAME,MAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAE;AAAT,OANT,CAM0B;AAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CAdJ,CADJ;AA+BH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH","sourcesContent":["import React, { useState } from \"react\";\r\nimport { minutesToDuration } from \"../utils/duration\";\r\nimport { secondsToDuration } from \"../utils/duration\";\r\nexport default function TimerSection ({timerObject, setTimerObject,isTimerRunning})\r\n{\r\n    if(isTimerRunning)\r\n    {\r\n        let width = 1-((timerObject.focusSeconds)/(timerObject.focusDuration*60));\r\n        width = width*100;\r\n        console.log(width)\r\n        return (\r\n            <div>\r\n                {/* TODO: This area should show only when a focus or break session is running or pauses */}\r\n                <div className=\"row mb-2\">\r\n                  <div className=\"col\">\r\n                    {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n                    <h2 data-testid=\"session-title\">\r\n                      Focusing for {minutesToDuration(timerObject.focusDuration)} minutes\r\n                    </h2>\r\n                    {/* TODO: Update message below to include time remaining in the current session */}\r\n                    <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                      {secondsToDuration(timerObject.focusSeconds)} remaining\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mb-2\">\r\n                  <div className=\"col\">\r\n                    <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                      <div\r\n                        className=\"progress-bar\"\r\n                        role=\"progressbar\"\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                        aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\r\n                        style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n        )\r\n    }\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}