{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\week7\\\\qualified\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ButtonHandler.jsx\";\nimport React, { useState } from \"react\";\nexport default function ButtonHandler({\n  type,\n  className,\n  dataTestid,\n  className2,\n  timerObject,\n  setTimerObject\n}) {\n  const incrementHandler = event => {\n    if (dataTestid.includes(\"increase\")) {\n      if (dataTestid.includes(\"focus\")) {\n        if (timerObject.focusDuration < timerObject.focusMax) {\n          timerObject.focusDuration += timerObject.focusIncrement;\n        }\n      } else {\n        if (timerObject.breakDuration < timerObject.breakMax) {\n          timerObject.breakDuration += timerObject.breakIncrement;\n        }\n      }\n    } else {\n      if (dataTestid.includes(\"focus\")) {\n        if (timerObject.focusDuration > timerObject.focusMin) {\n          timerObject.focusDuration -= timerObject.focusIncrement;\n        }\n      } else {\n        if (timerObject.breakDuration > timerObject.breakMin) {\n          timerObject.breakDuration -= timerObject.breakIncrement;\n        }\n      }\n    }\n\n    setTimerObject(timerObject);\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: type,\n    className: className,\n    \"data-testid\": dataTestid,\n    onClick: incrementHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: className2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }\n  }));\n}","map":{"version":3,"sources":["D:/Thinkful/week7/qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ButtonHandler.jsx"],"names":["React","useState","ButtonHandler","type","className","dataTestid","className2","timerObject","setTimerObject","incrementHandler","event","includes","focusDuration","focusMax","focusIncrement","breakDuration","breakMax","breakIncrement","focusMin","breakMin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,eAAe,SAASC,aAAT,CAAuB;AAACC,EAAAA,IAAD;AAAMC,EAAAA,SAAN;AAAiBC,EAAAA,UAAjB;AAA6BC,EAAAA,UAA7B;AAAwCC,EAAAA,WAAxC;AAAqDC,EAAAA;AAArD,CAAvB,EACf;AAEO,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,QAAGL,UAAU,CAACM,QAAX,CAAoB,UAApB,CAAH,EACA;AACI,UAAGN,UAAU,CAACM,QAAX,CAAoB,OAApB,CAAH,EACA;AACK,YAAGJ,WAAW,CAACK,aAAZ,GAA6BL,WAAW,CAACM,QAA5C,EACA;AACIN,UAAAA,WAAW,CAACK,aAAZ,IAA6BL,WAAW,CAACO,cAAzC;AACH;AACL,OAND,MAQA;AACC,YAAGP,WAAW,CAACQ,aAAZ,GAA6BR,WAAW,CAACS,QAA5C,EACI;AACIT,UAAAA,WAAW,CAACQ,aAAZ,IAA6BR,WAAW,CAACU,cAAzC;AACH;AACL;AACJ,KAhBD,MAkBA;AACC,UAAGZ,UAAU,CAACM,QAAX,CAAoB,OAApB,CAAH,EACA;AACI,YAAGJ,WAAW,CAACK,aAAZ,GAA6BL,WAAW,CAACW,QAA5C,EACI;AACIX,UAAAA,WAAW,CAACK,aAAZ,IAA6BL,WAAW,CAACO,cAAzC;AACH;AACR,OAND,MAQA;AACI,YAAGP,WAAW,CAACQ,aAAZ,GAA6BR,WAAW,CAACY,QAA5C,EACI;AACIZ,UAAAA,WAAW,CAACQ,aAAZ,IAA6BR,WAAW,CAACU,cAAzC;AACH;AACR;AACD;;AACDT,IAAAA,cAAc,CAACD,WAAD,CAAd;AACH,GApCD;;AAqCC,sBACI;AACA,IAAA,IAAI,EAAEJ,IADN;AAEA,IAAA,SAAS,EAAEC,SAFX;AAGA,mBAAaC,UAHb;AAIA,IAAA,OAAO,EAAEI,gBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMD;AAAM,IAAA,SAAS,EAAEH,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANC,CADJ;AAUP","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\nexport default function ButtonHandler({type,className, dataTestid, className2,timerObject, setTimerObject} )\r\n{\r\n    \r\n       const incrementHandler = (event) => {\r\n           if(dataTestid.includes(\"increase\"))\r\n           {\r\n               if(dataTestid.includes(\"focus\"))\r\n               {\r\n                    if(timerObject.focusDuration < (timerObject.focusMax))\r\n                    {\r\n                        timerObject.focusDuration += timerObject.focusIncrement;\r\n                    }\r\n               }\r\n               else\r\n               {\r\n                if(timerObject.breakDuration < (timerObject.breakMax))\r\n                    {\r\n                        timerObject.breakDuration += timerObject.breakIncrement;\r\n                    }\r\n               }\r\n           }\r\n           else\r\n           {\r\n            if(dataTestid.includes(\"focus\"))\r\n            {\r\n                if(timerObject.focusDuration > (timerObject.focusMin))\r\n                    {\r\n                        timerObject.focusDuration -= timerObject.focusIncrement;\r\n                    }\r\n            }\r\n            else\r\n            {\r\n                if(timerObject.breakDuration > (timerObject.breakMin))\r\n                    {\r\n                        timerObject.breakDuration -= timerObject.breakIncrement;\r\n                    }\r\n            }\r\n           }\r\n           setTimerObject(timerObject);\r\n       }\r\n        return(\r\n            <button\r\n            type={type}\r\n            className={className}\r\n            data-testid={dataTestid}\r\n            onClick={incrementHandler}\r\n          >\r\n           <span className={className2} />\r\n          </button>\r\n        )\r\n}"]},"metadata":{},"sourceType":"module"}