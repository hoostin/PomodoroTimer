{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\week7\\\\qualified\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport ButtonHandler from \"./ButtonHandler\";\nimport TimerSection from \"./TimerSection\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport StopHandler from \"./StopHandler\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [timerObject, setTimerObject] = useState({\n    focusDuration: 25,\n    breakDuration: 5,\n    focusMax: 60,\n    focusMin: 5,\n    focusIncrement: 5,\n    focusSeconds: 25 * 60,\n    breakMax: 15,\n    breakMin: 1,\n    breakIncrement: 1,\n    breakSeconds: 5 * 60,\n    state: \"stop\"\n  });\n  useInterval(() => {\n    setTimerObject(() => {\n      if (timerObject.state === \"focus\") {\n        if (timerObject.focusSeconds > 0) {\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          return { ...timerObject,\n            focusSeconds: timerObject.focusSeconds - 1\n          };\n        } else {\n          return { ...timerObject,\n            state: \"break\"\n          };\n        }\n      } else {\n        if (timerObject.breakSeconds > 0) {\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          return { ...timerObject,\n            breakSeconds: timerObject.breakSeconds - 1\n          };\n        } else {\n          return { ...timerObject,\n            state: \"focus\",\n            focusSeconds: timerObject.focusDuration * 60,\n            breakSeconds: timerObject.breakDuration * 60\n          };\n        }\n      }\n    }); //console.log(secondsToDuration(timerObject.focusSeconds));\n    // ToDo: Implement what should happen when the timer is running\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n\n    if (timerObject.state === \"stop\") {\n      setTimerObject(() => {\n        return { ...timerObject,\n          state: \"focus\"\n        };\n      });\n    } // } else {\n    //   setTimerObject(() => {\n    //     return {\n    //       ...timerObject,\n    //       state: \"stop\",\n    //     };\n    //   });\n    // }\n\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(timerObject.focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonHandler, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestid: \"decrease-focus\",\n    className2: \"oi oi-minus\",\n    timerObject: timerObject,\n    setTimerObject: setTimerObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ButtonHandler, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestid: \"increase-focus\",\n    className2: \"oi oi-plus\",\n    timerObject: timerObject,\n    setTimerObject: setTimerObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(timerObject.breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonHandler, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestid: \"decrease-break\",\n    className2: \"oi oi-minus\",\n    timerObject: timerObject,\n    setTimerObject: setTimerObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonHandler, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestid: \"increase-break\",\n    className2: \"oi oi-plus\",\n    timerObject: timerObject,\n    setTimerObject: setTimerObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StopHandler, {\n    timerObject: timerObject,\n    setTimerObject: setTimerObject,\n    setIsTimerRunning: setIsTimerRunning,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TimerSection, {\n    timerObject: timerObject,\n    setTimerObject: setTimerObject,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["D:/Thinkful/week7/qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","ButtonHandler","TimerSection","minutesToDuration","secondsToDuration","StopHandler","Pomodoro","isTimerRunning","setIsTimerRunning","timerObject","setTimerObject","focusDuration","breakDuration","focusMax","focusMin","focusIncrement","focusSeconds","breakMax","breakMin","breakIncrement","breakSeconds","state","Audio","play","playPause","prevState","oi"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC;AAC7Ca,IAAAA,aAAa,EAAE,EAD8B;AAE7CC,IAAAA,aAAa,EAAE,CAF8B;AAG7CC,IAAAA,QAAQ,EAAE,EAHmC;AAI7CC,IAAAA,QAAQ,EAAE,CAJmC;AAK7CC,IAAAA,cAAc,EAAE,CAL6B;AAM7CC,IAAAA,YAAY,EAAE,KAAK,EAN0B;AAO7CC,IAAAA,QAAQ,EAAE,EAPmC;AAQ7CC,IAAAA,QAAQ,EAAE,CARmC;AAS7CC,IAAAA,cAAc,EAAE,CAT6B;AAU7CC,IAAAA,YAAY,EAAE,IAAI,EAV2B;AAW7CC,IAAAA,KAAK,EAAE;AAXsC,GAAD,CAA9C;AAaArB,EAAAA,WAAW,CACT,MAAM;AACJU,IAAAA,cAAc,CAAC,MAAM;AACnB,UAAID,WAAW,CAACY,KAAZ,KAAsB,OAA1B,EAAmC;AACjC,YAAIZ,WAAW,CAACO,YAAZ,GAA2B,CAA/B,EAAkC;AAChC,cAAIM,KAAJ,CAAW,8CAAX,EAA0DC,IAA1D;AACA,iBAAO,EACL,GAAGd,WADE;AAELO,YAAAA,YAAY,EAAEP,WAAW,CAACO,YAAZ,GAA2B;AAFpC,WAAP;AAID,SAND,MAMO;AACL,iBAAO,EACL,GAAGP,WADE;AAELY,YAAAA,KAAK,EAAE;AAFF,WAAP;AAID;AACF,OAbD,MAaO;AACL,YAAIZ,WAAW,CAACW,YAAZ,GAA2B,CAA/B,EAAkC;AAChC,cAAIE,KAAJ,CAAW,8CAAX,EAA0DC,IAA1D;AACA,iBAAO,EACL,GAAGd,WADE;AAELW,YAAAA,YAAY,EAAEX,WAAW,CAACW,YAAZ,GAA2B;AAFpC,WAAP;AAID,SAND,MAMO;AACL,iBAAO,EACL,GAAGX,WADE;AAELY,YAAAA,KAAK,EAAE,OAFF;AAGLL,YAAAA,YAAY,EAAEP,WAAW,CAACE,aAAZ,GAA4B,EAHrC;AAILS,YAAAA,YAAY,EAAEX,WAAW,CAACG,aAAZ,GAA4B;AAJrC,WAAP;AAMD;AACF;AACF,KA9Ba,CAAd,CADI,CAgCJ;AACA;AACD,GAnCQ,EAoCTL,cAAc,GAAG,IAAH,GAAU,IApCf,CAAX;;AAuCA,WAASiB,SAAT,GAAqB;AACnBhB,IAAAA,iBAAiB,CAAEiB,SAAD,IAAe,CAACA,SAAjB,CAAjB;;AACA,QAAIhB,WAAW,CAACY,KAAZ,KAAsB,MAA1B,EAAkC;AAChCX,MAAAA,cAAc,CAAC,MAAM;AACnB,eAAO,EACL,GAAGD,WADE;AAELY,UAAAA,KAAK,EAAE;AAFF,SAAP;AAID,OALa,CAAd;AAMD,KATkB,CAUnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBlB,iBAAiB,CAACM,WAAW,CAACE,aAAb,CAFpC,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,aAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,UAAU,EAAC,gBAHb;AAIE,IAAA,UAAU,EAAC,aAJb;AAKE,IAAA,WAAW,EAAEF,WALf;AAME,IAAA,cAAc,EAAEC,cANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAWE,oBAAC,aAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,UAAU,EAAC,gBAHb;AAIE,IAAA,UAAU,EAAC,YAJb;AAKE,IAAA,WAAW,EAAED,WALf;AAME,IAAA,cAAc,EAAEC,cANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CALF,CADF,CADF,eA6BE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBP,iBAAiB,CAACM,WAAW,CAACG,aAAb,CAFpC,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,aAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,UAAU,EAAC,gBAHb;AAIE,IAAA,UAAU,EAAC,aAJb;AAKE,IAAA,WAAW,EAAEH,WALf;AAME,IAAA,cAAc,EAAEC,cANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAWE,oBAAC,aAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,UAAU,EAAC,gBAHb;AAIE,IAAA,UAAU,EAAC,YAJb;AAKE,IAAA,WAAW,EAAED,WALf;AAME,IAAA,cAAc,EAAEC,cANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CALF,CADF,CADF,CA7BF,CADF,eA6DE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,kBAAW,gBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,mBAAY,YAHd;AAIE,IAAA,KAAK,EAAC,sBAJR;AAKE,IAAA,OAAO,EAAEc,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAEzB,UAAU,CAAC;AACpB2B,MAAAA,EAAE,EAAE,IADgB;AAEpB,uBAAiB,CAACnB,cAFE;AAGpB,wBAAkBA;AAHE,KAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CALF,eA6BE,oBAAC,WAAD;AACE,IAAA,WAAW,EAAEE,WADf;AAEE,IAAA,cAAc,EAAEC,cAFlB;AAGE,IAAA,iBAAiB,EAAEF,iBAHrB;AAIE,IAAA,cAAc,EAAED,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,CADF,eAqCE,oBAAC,YAAD;AACE,IAAA,WAAW,EAAEE,WADf;AAEE,IAAA,cAAc,EAAEC,cAFlB;AAGE,IAAA,cAAc,EAAEH,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,CADF,CA7DF,CADF;AA6GD;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport ButtonHandler from \"./ButtonHandler\";\nimport TimerSection from \"./TimerSection\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport StopHandler from \"./StopHandler\";\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [timerObject, setTimerObject] = useState({\n    focusDuration: 25,\n    breakDuration: 5,\n    focusMax: 60,\n    focusMin: 5,\n    focusIncrement: 5,\n    focusSeconds: 25 * 60,\n    breakMax: 15,\n    breakMin: 1,\n    breakIncrement: 1,\n    breakSeconds: 5 * 60,\n    state: \"stop\",\n  });\n  useInterval(\n    () => {\n      setTimerObject(() => {\n        if (timerObject.state === \"focus\") {\n          if (timerObject.focusSeconds > 0) {\n            new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n            return {\n              ...timerObject,\n              focusSeconds: timerObject.focusSeconds - 1,\n            };\n          } else {\n            return {\n              ...timerObject,\n              state: \"break\",\n            };\n          }\n        } else {\n          if (timerObject.breakSeconds > 0) {\n            new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n            return {\n              ...timerObject,\n              breakSeconds: timerObject.breakSeconds - 1,\n            };\n          } else {\n            return {\n              ...timerObject,\n              state: \"focus\",\n              focusSeconds: timerObject.focusDuration * 60,\n              breakSeconds: timerObject.breakDuration * 60,\n            };\n          }\n        }\n      });\n      //console.log(secondsToDuration(timerObject.focusSeconds));\n      // ToDo: Implement what should happen when the timer is running\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n    if (timerObject.state === \"stop\") {\n      setTimerObject(() => {\n        return {\n          ...timerObject,\n          state: \"focus\",\n        };\n      });\n    }\n    // } else {\n    //   setTimerObject(() => {\n    //     return {\n    //       ...timerObject,\n    //       state: \"stop\",\n    //     };\n    //   });\n    // }\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(timerObject.focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <ButtonHandler\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                dataTestid=\"decrease-focus\"\n                className2=\"oi oi-minus\"\n                timerObject={timerObject}\n                setTimerObject={setTimerObject}\n              />\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <ButtonHandler\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                dataTestid=\"increase-focus\"\n                className2=\"oi oi-plus\"\n                timerObject={timerObject}\n                setTimerObject={setTimerObject}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(timerObject.breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <ButtonHandler\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  dataTestid=\"decrease-break\"\n                  className2=\"oi oi-minus\"\n                  timerObject={timerObject}\n                  setTimerObject={setTimerObject}\n                />\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <ButtonHandler\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  dataTestid=\"increase-break\"\n                  className2=\"oi oi-plus\"\n                  timerObject={timerObject}\n                  setTimerObject={setTimerObject}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            {/* <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button> */}\n            <StopHandler\n              timerObject={timerObject}\n              setTimerObject={setTimerObject}\n              setIsTimerRunning={setIsTimerRunning}\n              isTimerRunning={isTimerRunning}\n            />\n          </div>\n          <TimerSection\n            timerObject={timerObject}\n            setTimerObject={setTimerObject}\n            isTimerRunning={isTimerRunning}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}