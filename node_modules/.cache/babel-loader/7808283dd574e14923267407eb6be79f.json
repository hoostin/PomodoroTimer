{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\week7\\\\qualified\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\TimerSection.jsx\";\nimport React, { useState } from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport TimerSectionSpecific from \"./TimerSectionSpecific\";\nexport default function TimerSection({\n  timerObject,\n  setTimerObject,\n  isTimerRunning\n}) {\n  switch (timerObject.state) {\n    case \"stop\":\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }\n      });\n      break;\n\n    case \"focus\":\n      if (isTimerRunning) {\n        let width = 1 - timerObject.focusSeconds / (timerObject.focusDuration * 60);\n        width = width * 100;\n        console.log(width);\n        return /*#__PURE__*/React.createElement(TimerSectionSpecific, {\n          durationString: `Focusing for ${minutesToDuration(timerObject.focusDuration)} minutes`,\n          width: width,\n          timeString: `${secondsToDuration(timerObject.focusSeconds)} remaining`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 20\n          }\n        });\n      }\n\n      break;\n\n    case \"break\":\n      if (isTimerRunning) {\n        let width = 1 - timerObject.breakSeconds / (timerObject.breakDuration * 60);\n        width = width * 100;\n        console.log(width);\n        return /*#__PURE__*/React.createElement(TimerSectionSpecific, {\n          durationString: `Break for ${minutesToDuration(timerObject.breakDuration)} minutes`,\n          width: width,\n          timeString: `${secondsToDuration(timerObject.breakSeconds)} remaining`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 24\n          }\n        });\n      }\n\n  }\n}","map":{"version":3,"sources":["D:/Thinkful/week7/qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/TimerSection.jsx"],"names":["React","useState","minutesToDuration","secondsToDuration","TimerSectionSpecific","TimerSection","timerObject","setTimerObject","isTimerRunning","state","width","focusSeconds","focusDuration","console","log","breakSeconds","breakDuration"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,eAAe,SAASC,YAAT,CAAuB;AAACC,EAAAA,WAAD;AAAcC,EAAAA,cAAd;AAA6BC,EAAAA;AAA7B,CAAvB,EACf;AACI,UAAOF,WAAW,CAACG,KAAnB;AAEI,SAAK,MAAL;AACI,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGA;;AACJ,SAAK,OAAL;AACI,UAAGD,cAAH,EACA;AACA,YAAIE,KAAK,GAAG,IAAIJ,WAAW,CAACK,YAAb,IAA4BL,WAAW,CAACM,aAAZ,GAA0B,EAAtD,CAAf;AACAF,QAAAA,KAAK,GAAGA,KAAK,GAAC,GAAd;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,4BAAO,oBAAC,oBAAD;AACP,UAAA,cAAc,EAAI,gBAAeR,iBAAiB,CAACI,WAAW,CAACM,aAAb,CAA4B,UADvE;AAEP,UAAA,KAAK,EAAGF,KAFD;AAGP,UAAA,UAAU,EAAG,GAAEP,iBAAiB,CAACG,WAAW,CAACK,YAAb,CAA2B,YAHpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKC;;AACD;;AACA,SAAK,OAAL;AACI,UAAGH,cAAH,EACA;AACA,YAAIE,KAAK,GAAG,IAAIJ,WAAW,CAACS,YAAb,IAA4BT,WAAW,CAACU,aAAZ,GAA0B,EAAtD,CAAf;AACAN,QAAAA,KAAK,GAAGA,KAAK,GAAC,GAAd;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,4BAAO,oBAAC,oBAAD;AACP,UAAA,cAAc,EAAI,aAAYR,iBAAiB,CAACI,WAAW,CAACU,aAAb,CAA4B,UADpE;AAEP,UAAA,KAAK,EAAGN,KAFD;AAGP,UAAA,UAAU,EAAG,GAAEP,iBAAiB,CAACG,WAAW,CAACS,YAAb,CAA2B,YAHpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMC;;AAhCb;AAoCH","sourcesContent":["import React, { useState } from \"react\";\r\nimport { minutesToDuration } from \"../utils/duration\";\r\nimport { secondsToDuration } from \"../utils/duration\";\r\nimport TimerSectionSpecific from \"./TimerSectionSpecific\";\r\nexport default function TimerSection ({timerObject, setTimerObject,isTimerRunning})\r\n{\r\n    switch(timerObject.state)\r\n    {\r\n        case \"stop\":\r\n            return (\r\n                <div></div>\r\n            )\r\n            break;\r\n        case \"focus\":\r\n            if(isTimerRunning)\r\n            {\r\n            let width = 1-((timerObject.focusSeconds)/(timerObject.focusDuration*60));\r\n            width = width*100;\r\n            console.log(width)\r\n            return <TimerSectionSpecific \r\n            durationString={ `Focusing for ${minutesToDuration(timerObject.focusDuration)} minutes`} \r\n            width ={width} \r\n            timeString={`${secondsToDuration(timerObject.focusSeconds)} remaining`}\r\n            />\r\n            }\r\n            break;\r\n            case \"break\":\r\n                if(isTimerRunning)\r\n                {\r\n                let width = 1-((timerObject.breakSeconds)/(timerObject.breakDuration*60));\r\n                width = width*100;\r\n                console.log(width)\r\n                return <TimerSectionSpecific \r\n                durationString={ `Break for ${minutesToDuration(timerObject.breakDuration)} minutes`} \r\n                width ={width} \r\n                timeString={`${secondsToDuration(timerObject.breakSeconds)} remaining`}\r\n                />\r\n               \r\n                }  \r\n        }\r\n    \r\n   \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}